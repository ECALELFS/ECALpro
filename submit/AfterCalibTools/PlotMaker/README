USER (VERY) SHORT GUIDE

Here we describe the macros and how to use them.

In general, these ROOT macros are .C files supported by .sh scripts to compile or simply use them. Typically the .sh script is used to set some options passed to the macros. These options generally includes:
- path to eos, where outputs of ECALpro are stored
- path to your cern website, where you would store the plots you make (of course you have to make sure you have such a website to see plots from the browser, otherwise you can just store them in local)
- dirName and tagName, which are the same defined in parameters.py
- the first and last number of iterations you want to use to produce plots (if you do n iterations with ECALpro, you might want to see plots only for the last two, or only for the first one) 
- other options will be described in the scripts themselves

In the following, there is a more detailed guide for the macros/scripts

----------------------------------------------------------------

First of all, use script makeDirWWW.sh to create directories in your cern website. There you will store plots.
- Remember to change settings before launching the script (see comments inside)

----------------------------------------------------------------

To produce plots for EB and EE (both 2D maps ad profiles), you can use the code inside submit/AfterCalibTools/PlotMaker/2DmapMaker/ folder (inside you will find another README explaining the usage).

Code inside 2DmapMaker/ substitutes the previous one, where the calibAna* macros in PlotMaker/ separately analyzed EB or EE. To avoid confusion, the new code is available inside 2DmapMaker/ , but the old code is not needed anymore and can be deleted (if you make a "fetch & merge" of the central repository, these old files should be automatically removed)

To run the code you only need to use calibAna.sh: this script will compile source codes and then run the executable (produced after compiling main.cc).
Launch as "source calibAna.sh [OPTIONS]"

- passing option -c as "source calibAna.sh -c" will only compile the macros.
- passing option -nc as "source calibAna.sh -nc" will skip compiling (to save time if not necessary, but currently it takes few seconds).
- in calibAna.sh you have to properly set parameters used to run the macros (see comments inside). They will be passed to the executable
     - one of this parameters is the 'wwwBasePath' variable with the path to your afs area where you want to store plots (the specific folder is given by the user and added to it afterwards)
- notice that currently a TChain of root file is used to make plots. This TChain is made using *calibMap.root files on eos (31 for EB and 8 for EE). Since we also have  the merged file, we could directly use that one instead of creating a TChain, but note that variables inside the ntuples in the merged file end with "_" (this is not  true for the unmerged file used in the TChain, I don't know why) so you should change the name of trees'variables used if you want to run on the merged ntuples.

----------------------------------------------------------------

drawFits.C and drawICmap.C are macros used to draw some fits or the IC maps: they can be used with the scripts drawFits.sh and drawICmap.sh
- All the settings are made in the .sh scripts

--> DrawFits.C

- drawFits lets you choose how many fits you want to draw (no need to draw fits for all crystals if you just want to see how they look like): for the moment this is specified in the .C macro, and makes use of the fit index. This index identifies the crystals using a (still unknown to me) convention in ECALpro. Note that here you are just drawing fits on canvases, but the fits themselves are already stored on eos (ECALpro saves them in the *_fitRes.root files)   
- The .sh script will first merge the *fitRes.root files on eos for Barrel and Endcap (keeping them separate). ECALpro does not do it automatically (unless we modify it). It is thus convenient to do it ourselves just for the iteration we need.
- the merging is quite slow, so we suggest doing it only for the iterations you need.
- the merged file is created locally and then copied on EOS: remember to remove the local copy 

----------------------------------------------------------------

GENERAL COMMENT:

Feel free to modify and make this macros better ;-)
